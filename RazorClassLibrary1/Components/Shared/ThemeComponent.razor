@using RazorClassLibrary1.Components.Helpers
@inject IJSRuntime JSRuntime

<link href=@Href rel="stylesheet" />

<RadzenButton Variant="@(IsLightMode ? Variant.Flat : Variant.Text)"
              Icon="@(IsLightMode ? "dark_mode" : "light_mode")"
              Click="ChangeTheme" />

@code {
    [Parameter]
    public string LightTheme { get; set; } = "material";
    [Parameter]
    public string DarkTheme { get; set; } = "material-dark";

    bool IsLightMode { get; set; } = false;

    string Href = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await UpdateIcon();
    }

    private async Task UpdateIcon()
    {
        try
        {
            var responseCache = await AppCache.GetItem<ThemeCache?>("FSASOWebTheme", CacheType.LocalStorage);
            if (responseCache != null)
                IsLightMode = responseCache.theme.Equals(LightTheme);

            //https://forum.radzen.com/t/how-to-change-the-theme/14781/4
            //https://forum.radzen.com/t/blazor-server-change-theme-dynamically/5164/11
            Href = IsLightMode ? $"/css/material-base.css" : $"_content/Radzen.Blazor/css/material-dark.css";
        }
        catch (Exception)
        {
        }
    }

    void ChangeTheme()
    {
        try
        {
            IsLightMode = !IsLightMode;
            if (IsLightMode)
            {
                AppCache.SetItem("FSASOWebTheme", new ThemeCache(LightTheme), CacheType.LocalStorage);
                ThemeService.SetTheme(LightTheme);
            }
            else
            {
                AppCache.SetItem("FSASOWebTheme", new ThemeCache(DarkTheme), CacheType.LocalStorage);
                ThemeService.SetTheme(DarkTheme);
            }
        }
        catch (Exception)
        {
        }
    }
}
