<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Active" xml:space="preserve">
    <value>Ativo</value>
    <comment>Global</comment>
  </data>
  <data name="AddDocumentType" xml:space="preserve">
    <value>Agregar tipo de documento</value>
    <comment>Modals</comment>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Endereço</value>
    <comment>GridColumn</comment>
  </data>
  <data name="AddServiceOrder" xml:space="preserve">
    <value>Agregar ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="AddServiceOrderDocument" xml:space="preserve">
    <value>Agregar documento de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="AddServiceOrderFeature" xml:space="preserve">
    <value>Añadir recurso de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="AddServiceOrderRegister" xml:space="preserve">
    <value>Agregar registro de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="AddServiceOrderTask" xml:space="preserve">
    <value>Agregar tarea de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="AddServiceOrderTaskDocument" xml:space="preserve">
    <value>Agregar documento de tarefa de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="AddServiceOrderType" xml:space="preserve">
    <value>Agregar tipo de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="AddSupply" xml:space="preserve">
    <value>Add Fornecimento</value>
    <comment>Modals</comment>
  </data>
  <data name="AddSupplyOperation" xml:space="preserve">
    <value>Agregar Operaçõe de Fornecimento</value>
    <comment>Modals</comment>
  </data>
  <data name="AddTaskState" xml:space="preserve">
    <value>Agregar estado de tarefa</value>
    <comment>Modals</comment>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Quantia</value>
    <comment>GridColumn</comment>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Aplicar</value>
    <comment>Global</comment>
  </data>
  <data name="BasicInfo" xml:space="preserve">
    <value>Informações Básicas</value>
    <comment>Modal</comment>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Limpar</value>
    <comment>Global</comment>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Código</value>
    <comment>GridColumn</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Descrição</value>
    <comment>GridColumn</comment>
  </data>
  <data name="Documents" xml:space="preserve">
    <value>Documentos</value>
    <comment>Modal</comment>
  </data>
  <data name="DocumentType" xml:space="preserve">
    <value>Tipo de Documento</value>
    <comment>GridColumn</comment>
  </data>
  <data name="Documenttypes" xml:space="preserve">
    <value>Tipos de documentos</value>
    <comment>Sidebar</comment>
  </data>
  <data name="EditDocumentType" xml:space="preserve">
    <value>Editar Tipo de Documento</value>
    <comment>Modals</comment>
  </data>
  <data name="EditServiceOrder" xml:space="preserve">
    <value>Editar ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="EditServiceOrderDocument" xml:space="preserve">
    <value>Editar documento de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="EditServiceOrderFeature" xml:space="preserve">
    <value>Editar feature de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="EditServiceOrderRegister" xml:space="preserve">
    <value>Editar registro de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="EditServiceOrderTask" xml:space="preserve">
    <value>Editar tarea de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="EditServiceOrderTaskDocument" xml:space="preserve">
    <value>Editar documento de tarefa de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="EditServiceOrderType" xml:space="preserve">
    <value>Editar tipo de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="EditSupplyOperation" xml:space="preserve">
    <value>Editar Operaçõe de Fornecimento</value>
    <comment>Modals</comment>
  </data>
  <data name="EditTaskState" xml:space="preserve">
    <value>Editar estado de tarefa</value>
    <comment>Modals</comment>
  </data>
  <data name="EmptyTemplate" xml:space="preserve">
    <value>Não há registros para a entidade.</value>
    <comment>Grid</comment>
  </data>
  <data name="EstimatedEndingDate" xml:space="preserve">
    <value>Data de término estimada</value>
    <comment>GridColumn</comment>
  </data>
  <data name="ExecutionDate" xml:space="preserve">
    <value>Data de execução</value>
    <comment>GidColumn</comment>
  </data>
  <data name="Executor" xml:space="preserve">
    <value>Executor</value>
    <comment>Modals</comment>
  </data>
  <data name="Features" xml:space="preserve">
    <value>Recursos</value>
    <comment>Modal</comment>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filtro</value>
    <comment>Global</comment>
  </data>
  <data name="Masters" xml:space="preserve">
    <value>Mestras</value>
    <comment>Sidebar</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nome</value>
    <comment>GridColumn</comment>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Número</value>
    <comment>GridColumn</comment>
  </data>
  <data name="Observations" xml:space="preserve">
    <value>Observações</value>
    <comment>Global</comment>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Visão geral</value>
    <comment>Sidebar</comment>
  </data>
  <data name="Owner" xml:space="preserve">
    <value>Proprietário</value>
    <comment>Modals</comment>
  </data>
  <data name="ParentServiceOrder" xml:space="preserve">
    <value>Ordem de Serviço Padre</value>
    <comment>Modals</comment>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Preço</value>
    <comment>GridColumn</comment>
  </data>
  <data name="Registers" xml:space="preserve">
    <value>Registros</value>
    <comment>Modal</comment>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Procurar</value>
    <comment>Global</comment>
  </data>
  <data name="ServiceOrder" xml:space="preserve">
    <value>Ordem de serviço</value>
    <comment>Global</comment>
  </data>
  <data name="ServiceOrderData" xml:space="preserve">
    <value>Detalhes da ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="ServiceOrders" xml:space="preserve">
    <value>Ordems de serviço</value>
    <comment>Sidebar</comment>
  </data>
  <data name="ServiceOrdersBasicLayout" xml:space="preserve">
    <value>Service Orders Basic Layout</value>
    <comment>Global</comment>
  </data>
  <data name="ServiceOrdersDocuments" xml:space="preserve">
    <value>Documentos de Ordems de Serviço</value>
    <comment>Sidebar</comment>
  </data>
  <data name="ServiceOrdersFeatures" xml:space="preserve">
    <value>Recursos de ordems de serviço</value>
    <comment>Sidebar</comment>
  </data>
  <data name="ServiceOrdersRegisters" xml:space="preserve">
    <value>Registros de Ordems de Serviço</value>
    <comment>Sidebar</comment>
  </data>
  <data name="ServiceOrdersTasks" xml:space="preserve">
    <value>Tarefas de Ordems de Serviço</value>
    <comment>Sidebar</comment>
  </data>
  <data name="ServiceOrdersTasksDocuments" xml:space="preserve">
    <value>Ordems de serviço Tarefas Documentos</value>
    <comment>Sidebar</comment>
  </data>
  <data name="ServiceOrderTask" xml:space="preserve">
    <value>Tarefa de ordem de serviço</value>
    <comment>GridColumn</comment>
  </data>
  <data name="ServiceOrderTaskData" xml:space="preserve">
    <value>Detalhes da Tarefa de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="ServiceOrderTasks" xml:space="preserve">
    <value>Tarefas de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="ServiceOrderTasksStates" xml:space="preserve">
    <value>Estados das tarefas da ordem de serviço</value>
    <comment>Sidebar</comment>
  </data>
  <data name="ServiceOrderType" xml:space="preserve">
    <value>Tipo de ordem de serviço</value>
    <comment>Modals</comment>
  </data>
  <data name="ServiceOrderTypes" xml:space="preserve">
    <value>Tipos de ordem de serviço</value>
    <comment>Sidebar</comment>
  </data>
  <data name="State" xml:space="preserve">
    <value>Estado</value>
    <comment>GridColumn</comment>
  </data>
  <data name="StateFrom" xml:space="preserve">
    <value>Do estado</value>
    <comment>GridColumn</comment>
  </data>
  <data name="StateTo" xml:space="preserve">
    <value>Estado para</value>
    <comment>GridColumn</comment>
  </data>
  <data name="Supplies" xml:space="preserve">
    <value>Suprimentos</value>
    <comment>Sidebar</comment>
  </data>
  <data name="SupplyOperation" xml:space="preserve">
    <value>Operação de Abastecimento</value>
    <comment>GridColumn</comment>
  </data>
  <data name="SupplyOperations" xml:space="preserve">
    <value>Operações de Fornecimento</value>
    <comment>Sidebar</comment>
  </data>
  <data name="Tasks" xml:space="preserve">
    <value>Tarefas</value>
    <comment>Modal</comment>
  </data>
  <data name="Trigger" xml:space="preserve">
    <value>Acionar</value>
    <comment>GridColumn</comment>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Tipo</value>
    <comment>GridColumn</comment>
  </data>
  <data name="UpdSORegister" xml:space="preserve">
    <value>O status da Ordem de Serviço foi alterado para</value>
    <comment>Msg</comment>
  </data>
</root>